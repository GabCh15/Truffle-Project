{
  "contractName": "LinuxStaking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedTokens",
          "type": "uint256"
        }
      ],
      "name": "AddressLockedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "secondsAmount",
          "type": "uint256"
        }
      ],
      "name": "setStakingSecondAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedTokens\",\"type\":\"uint256\"}],\"name\":\"AddressLockedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsAmount\",\"type\":\"uint256\"}],\"name\":\"setStakingSecondAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructs staking contraft and defines the      token contract's address used to stake\"},\"deposit(uint256)\":{\"details\":\"Adds a given amount of tokens to the sender address Calling conditions: - The address of this contract needs to be allowed   to transfer from sender the given amount - Given amount has to be transferred to the address   of this contract\"},\"exit()\":{\"details\":\"Retrieves back the locked tokens      of sender and gets rewards Calling conditions: - Sender has to have locked tokens\"},\"getReward()\":{\"details\":\"Mints the reward amount of tokens to the sender Calling conditions: - Sender has to have locked tokens\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retrieve()\":{\"details\":\"Retrieves back the locked tokens of sender Calling conditions: - Sender has to have locked tokens\"},\"setStakingSecondAmount(uint256)\":{\"details\":\"Sets a given staking reward seconds amount Calling conditions: - Only contract's owner can call this function\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LinuxStaking.sol\":\"LinuxStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Linux.sol\":{\"keccak256\":\"0x86a406dc6f26c326b158b343d85eae349e1d938caf0813e2a7f1a337b1c1a7ca\",\"urls\":[\"bzz-raw://a41fb085a35c4e471b0a715f7b46424e006871afd6d19794176a22574ac073b2\",\"dweb:/ipfs/QmZnPQvuPCVHjxobkbMZepfvTktUGCcuBAFiezEqHYZmXK\"]},\"project:/contracts/LinuxStaking.sol\":{\"keccak256\":\"0x468cbece8290e9e5c3103a5d7e18e61133170532f9c40f684559dc0db6bad523\",\"urls\":[\"bzz-raw://4bf98dece40a565c6c117a7ee453a2c6a1cfb90646cd21ab53e84544f99db8bc\",\"dweb:/ipfs/QmQvoFyY7hAc983BKywFMTXvVhTW67dbd989C9Ur66yAUr\"]},\"project:/contracts/Windows.sol\":{\"keccak256\":\"0x728834c8fa3ec3fd32041e5c8bf1c16dccc41d61d1a0b46cee6edca935293533\",\"urls\":[\"bzz-raw://8623b08e044b7f34684c3f3215360d07388ed4b92a2d023c5c689474c2b35355\",\"dweb:/ipfs/QmNvbKUfhvnYKLiYwn9YZSBhNNeG2PjKdQkMyC3k44Yhc9\"]}},\"version\":1}",
  "bytecode": "0x608060405260016002553480156200001657600080fd5b50604051620011f7380380620011f783398181016040528101906200003c9190620001da565b6200005c62000050620000a460201b60201c565b620000ac60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200020c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a28262000175565b9050919050565b620001b48162000195565b8114620001c057600080fd5b50565b600081519050620001d481620001a9565b92915050565b600060208284031215620001f357620001f262000170565b5b60006200020384828501620001c3565b91505092915050565b610fdb806200021c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c7578063b6b55f25146100e5578063e9fad8ee14610101578063f2fde38b1461010b57610088565b8063012a4b361461008d5780632e64cec1146100a95780633d18b912146100b3578063715018a6146100bd575b600080fd5b6100a760048036038101906100a29190610a95565b610127565b005b6100b16101ad565b005b6100bb610399565b005b6100c56105fc565b005b6100cf610684565b6040516100dc9190610b03565b60405180910390f35b6100ff60048036038101906100fa9190610a95565b6106ad565b005b610109610884565b005b61012560048036038101906101209190610b4a565b610896565b005b61012f61098e565b73ffffffffffffffffffffffffffffffffffffffff1661014d610684565b73ffffffffffffffffffffffffffffffffffffffff16146101a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019a90610bd4565b60405180910390fd5b8060028190555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022a90610c40565b60405180910390fd5b60003390506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016102dc929190610c6f565b6020604051808303816000875af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f9190610cd0565b61032857600080fd5b6040518060400160405280600081526020016000815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141561041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610c40565b60405180910390fd5b60003390506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050600060025482602001514261049b9190610d2c565b83600001516104aa9190610d60565b6104b49190610de9565b9050600081116104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090610e66565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632c40bc2b84836040518363ffffffff1660e01b8152600401610556929190610c6f565b600060405180830381600087803b15801561057057600080fd5b505af1158015610584573d6000803e3d6000fd5b5050505060405180604001604052808360000151815260200142815250600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155905050505050565b61060461098e565b73ffffffffffffffffffffffffffffffffffffffff16610622610684565b73ffffffffffffffffffffffffffffffffffffffff1614610678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066f90610bd4565b60405180910390fd5b6106826000610996565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003390506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060006002548260200151426107299190610d2c565b83600001516107389190610d60565b6107429190610de9565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8430876040518463ffffffff1660e01b81526004016107a393929190610e86565b6020604051808303816000875af11580156107c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e69190610cd0565b6107ef57600080fd5b600081111561080157610800610399565b5b604051806040016040528085846000015161081c9190610ebd565b815260200142815250915081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505050505050565b61088c610399565b6108946101ad565b565b61089e61098e565b73ffffffffffffffffffffffffffffffffffffffff166108bc610684565b73ffffffffffffffffffffffffffffffffffffffff1614610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090990610bd4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097990610f85565b60405180910390fd5b61098b81610996565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b610a7281610a5f565b8114610a7d57600080fd5b50565b600081359050610a8f81610a69565b92915050565b600060208284031215610aab57610aaa610a5a565b5b6000610ab984828501610a80565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aed82610ac2565b9050919050565b610afd81610ae2565b82525050565b6000602082019050610b186000830184610af4565b92915050565b610b2781610ae2565b8114610b3257600080fd5b50565b600081359050610b4481610b1e565b92915050565b600060208284031215610b6057610b5f610a5a565b5b6000610b6e84828501610b35565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bbe602083610b77565b9150610bc982610b88565b602082019050919050565b60006020820190508181036000830152610bed81610bb1565b9050919050565b7f53656e64657220686173206e6f74206c6f636b656420746f6b656e7300000000600082015250565b6000610c2a601c83610b77565b9150610c3582610bf4565b602082019050919050565b60006020820190508181036000830152610c5981610c1d565b9050919050565b610c6981610a5f565b82525050565b6000604082019050610c846000830185610af4565b610c916020830184610c60565b9392505050565b60008115159050919050565b610cad81610c98565b8114610cb857600080fd5b50565b600081519050610cca81610ca4565b92915050565b600060208284031215610ce657610ce5610a5a565b5b6000610cf484828501610cbb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3782610a5f565b9150610d4283610a5f565b925082821015610d5557610d54610cfd565b5b828203905092915050565b6000610d6b82610a5f565b9150610d7683610a5f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610daf57610dae610cfd565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df482610a5f565b9150610dff83610a5f565b925082610e0f57610e0e610dba565b5b828204905092915050565b7f5468657265206973206e6f2072657761726420746f206d696e74000000000000600082015250565b6000610e50601a83610b77565b9150610e5b82610e1a565b602082019050919050565b60006020820190508181036000830152610e7f81610e43565b9050919050565b6000606082019050610e9b6000830186610af4565b610ea86020830185610af4565b610eb56040830184610c60565b949350505050565b6000610ec882610a5f565b9150610ed383610a5f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0857610f07610cfd565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f6f602683610b77565b9150610f7a82610f13565b604082019050919050565b60006020820190508181036000830152610f9e81610f62565b905091905056fea2646970667358221220aa8d7cc0f29431b65ceea469c4c6f84f6a69534e6c01ffa56dcf9cdf431d5d5264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c7578063b6b55f25146100e5578063e9fad8ee14610101578063f2fde38b1461010b57610088565b8063012a4b361461008d5780632e64cec1146100a95780633d18b912146100b3578063715018a6146100bd575b600080fd5b6100a760048036038101906100a29190610a95565b610127565b005b6100b16101ad565b005b6100bb610399565b005b6100c56105fc565b005b6100cf610684565b6040516100dc9190610b03565b60405180910390f35b6100ff60048036038101906100fa9190610a95565b6106ad565b005b610109610884565b005b61012560048036038101906101209190610b4a565b610896565b005b61012f61098e565b73ffffffffffffffffffffffffffffffffffffffff1661014d610684565b73ffffffffffffffffffffffffffffffffffffffff16146101a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019a90610bd4565b60405180910390fd5b8060028190555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022a90610c40565b60405180910390fd5b60003390506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016102dc929190610c6f565b6020604051808303816000875af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f9190610cd0565b61032857600080fd5b6040518060400160405280600081526020016000815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141561041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610c40565b60405180910390fd5b60003390506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050600060025482602001514261049b9190610d2c565b83600001516104aa9190610d60565b6104b49190610de9565b9050600081116104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090610e66565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632c40bc2b84836040518363ffffffff1660e01b8152600401610556929190610c6f565b600060405180830381600087803b15801561057057600080fd5b505af1158015610584573d6000803e3d6000fd5b5050505060405180604001604052808360000151815260200142815250600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155905050505050565b61060461098e565b73ffffffffffffffffffffffffffffffffffffffff16610622610684565b73ffffffffffffffffffffffffffffffffffffffff1614610678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066f90610bd4565b60405180910390fd5b6106826000610996565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003390506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060006002548260200151426107299190610d2c565b83600001516107389190610d60565b6107429190610de9565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8430876040518463ffffffff1660e01b81526004016107a393929190610e86565b6020604051808303816000875af11580156107c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e69190610cd0565b6107ef57600080fd5b600081111561080157610800610399565b5b604051806040016040528085846000015161081c9190610ebd565b815260200142815250915081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505050505050565b61088c610399565b6108946101ad565b565b61089e61098e565b73ffffffffffffffffffffffffffffffffffffffff166108bc610684565b73ffffffffffffffffffffffffffffffffffffffff1614610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090990610bd4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097990610f85565b60405180910390fd5b61098b81610996565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b610a7281610a5f565b8114610a7d57600080fd5b50565b600081359050610a8f81610a69565b92915050565b600060208284031215610aab57610aaa610a5a565b5b6000610ab984828501610a80565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aed82610ac2565b9050919050565b610afd81610ae2565b82525050565b6000602082019050610b186000830184610af4565b92915050565b610b2781610ae2565b8114610b3257600080fd5b50565b600081359050610b4481610b1e565b92915050565b600060208284031215610b6057610b5f610a5a565b5b6000610b6e84828501610b35565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bbe602083610b77565b9150610bc982610b88565b602082019050919050565b60006020820190508181036000830152610bed81610bb1565b9050919050565b7f53656e64657220686173206e6f74206c6f636b656420746f6b656e7300000000600082015250565b6000610c2a601c83610b77565b9150610c3582610bf4565b602082019050919050565b60006020820190508181036000830152610c5981610c1d565b9050919050565b610c6981610a5f565b82525050565b6000604082019050610c846000830185610af4565b610c916020830184610c60565b9392505050565b60008115159050919050565b610cad81610c98565b8114610cb857600080fd5b50565b600081519050610cca81610ca4565b92915050565b600060208284031215610ce657610ce5610a5a565b5b6000610cf484828501610cbb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3782610a5f565b9150610d4283610a5f565b925082821015610d5557610d54610cfd565b5b828203905092915050565b6000610d6b82610a5f565b9150610d7683610a5f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610daf57610dae610cfd565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df482610a5f565b9150610dff83610a5f565b925082610e0f57610e0e610dba565b5b828204905092915050565b7f5468657265206973206e6f2072657761726420746f206d696e74000000000000600082015250565b6000610e50601a83610b77565b9150610e5b82610e1a565b602082019050919050565b60006020820190508181036000830152610e7f81610e43565b9050919050565b6000606082019050610e9b6000830186610af4565b610ea86020830185610af4565b610eb56040830184610c60565b949350505050565b6000610ec882610a5f565b9150610ed383610a5f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0857610f07610cfd565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f6f602683610b77565b9150610f7a82610f13565b604082019050919050565b60006020820190508181036000830152610f9e81610f62565b905091905056fea2646970667358221220aa8d7cc0f29431b65ceea469c4c6f84f6a69534e6c01ffa56dcf9cdf431d5d5264736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:20",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:20",
                "type": ""
              }
            ],
            "src": "7:75:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:20"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:20"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:20",
                "type": ""
              }
            ],
            "src": "334:126:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:20",
                "type": ""
              }
            ],
            "src": "466:96:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:20"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:20",
                "type": ""
              }
            ],
            "src": "568:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:20"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:20",
                "type": ""
              }
            ],
            "src": "696:143:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:20",
                "type": ""
              }
            ],
            "src": "845:351:20"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9411:20",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:20",
                "type": ""
              }
            ],
            "src": "7:75:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:20"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:20"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:20",
                "type": ""
              }
            ],
            "src": "334:77:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:20"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:20",
                "type": ""
              }
            ],
            "src": "417:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:20"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:20",
                "type": ""
              }
            ],
            "src": "545:139:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:20",
                "type": ""
              }
            ],
            "src": "690:329:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:20",
                "type": ""
              }
            ],
            "src": "1025:126:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:20",
                "type": ""
              }
            ],
            "src": "1157:96:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:20"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:20",
                "type": ""
              }
            ],
            "src": "1259:118:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:124:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1503:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1491:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1571:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1595:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1580:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1580:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1527:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:71:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1453:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:20",
                "type": ""
              }
            ],
            "src": "1383:222:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1654:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1711:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1720:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1723:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1713:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1713:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1677:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1702:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1684:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1684:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1674:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1674:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1664:63:20"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1647:5:20",
                "type": ""
              }
            ],
            "src": "1611:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1791:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1801:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1823:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1810:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1801:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1866:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1839:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1839:33:20"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1769:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1777:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1785:5:20",
                "type": ""
              }
            ],
            "src": "1739:139:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1950:263:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1996:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1998:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1998:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1998:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1971:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1980:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1992:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1963:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1960:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2089:117:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2104:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2108:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2133:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2168:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2179:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2164:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2164:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2188:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2143:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2143:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2133:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1920:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1931:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1943:6:20",
                "type": ""
              }
            ],
            "src": "1884:329:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2315:73:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2332:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2337:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2325:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2325:19:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2353:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2372:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2377:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2368:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:14:20"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2353:11:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2287:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2292:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2303:11:20",
                "type": ""
              }
            ],
            "src": "2219:169:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2500:76:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2522:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2530:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2518:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2518:14:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2534:34:20",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2511:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2511:58:20"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2492:6:20",
                "type": ""
              }
            ],
            "src": "2394:182:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2728:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2738:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2804:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2809:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2745:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2745:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2738:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2910:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "2821:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2821:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2821:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2923:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2934:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2939:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2930:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2930:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2923:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2716:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2724:3:20",
                "type": ""
              }
            ],
            "src": "2582:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3125:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3135:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3147:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3158:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3143:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3143:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3135:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3182:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3193:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3178:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3178:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3201:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3207:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3197:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3197:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3171:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3171:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3227:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3361:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3235:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3235:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3227:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3105:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3120:4:20",
                "type": ""
              }
            ],
            "src": "2954:419:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3485:72:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3507:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3515:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3503:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3503:14:20"
                      },
                      {
                        "hexValue": "53656e64657220686173206e6f74206c6f636b656420746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3519:30:20",
                        "type": "",
                        "value": "Sender has not locked tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3496:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3496:54:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3496:54:20"
                }
              ]
            },
            "name": "store_literal_in_memory_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3477:6:20",
                "type": ""
              }
            ],
            "src": "3379:178:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3709:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3719:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3785:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3790:2:20",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3726:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3726:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3719:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3891:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46",
                      "nodeType": "YulIdentifier",
                      "src": "3802:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3802:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3802:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3904:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3915:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3920:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3911:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3911:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3904:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3697:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3705:3:20",
                "type": ""
              }
            ],
            "src": "3563:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4106:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4116:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4128:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4139:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4124:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4124:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4116:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4163:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4174:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4159:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4159:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4182:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4188:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4178:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4178:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4152:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4152:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4152:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4208:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4342:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4216:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4216:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4208:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4086:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4101:4:20",
                "type": ""
              }
            ],
            "src": "3935:419:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4425:53:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4442:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4465:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4447:17:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4447:24:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4435:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4435:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4435:37:20"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4413:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4420:3:20",
                "type": ""
              }
            ],
            "src": "4360:118:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4610:206:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4620:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4632:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4643:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4628:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4628:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4620:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4700:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4713:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4724:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4709:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4709:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4656:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4656:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4656:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4781:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4794:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4805:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4790:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4790:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4737:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4737:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4737:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4574:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4586:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4594:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4605:4:20",
                "type": ""
              }
            ],
            "src": "4484:332:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4864:48:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4874:32:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4899:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4892:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4892:13:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4885:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4885:21:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4874:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4846:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4856:7:20",
                "type": ""
              }
            ],
            "src": "4822:90:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4958:76:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5012:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5021:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5024:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5014:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5014:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5014:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4981:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5003:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "4988:14:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4988:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4978:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4978:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4971:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4971:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4968:60:20"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4951:5:20",
                "type": ""
              }
            ],
            "src": "4918:116:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5100:77:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5110:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5125:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5119:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5119:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5110:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5165:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5141:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5141:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5141:30:20"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5078:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5086:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5094:5:20",
                "type": ""
              }
            ],
            "src": "5040:137:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5257:271:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5303:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5305:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5305:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5305:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5278:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5287:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5274:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5274:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5299:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5270:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5270:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5267:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5396:125:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5411:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5425:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5415:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5440:71:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5483:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5494:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5479:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5479:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5503:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5450:28:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5450:61:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5440:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5227:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5238:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5250:6:20",
                "type": ""
              }
            ],
            "src": "5183:345:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5562:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5579:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5582:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5572:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5572:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5572:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5676:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5679:4:20",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5669:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5669:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5669:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5700:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5703:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5693:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5693:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5693:15:20"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5534:180:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5765:146:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5775:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5798:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5780:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5780:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "5775:1:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5809:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5832:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5814:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "5809:1:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5856:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5858:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5858:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5858:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5850:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5853:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5847:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5847:8:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5844:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5888:17:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5900:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5903:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5896:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5888:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5751:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5754:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5760:4:20",
                "type": ""
              }
            ],
            "src": "5720:191:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5965:300:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5975:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5998:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5980:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5980:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "5975:1:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6009:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6032:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6014:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6014:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6009:1:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6207:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6209:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6209:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6209:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6119:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6112:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6112:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6105:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6105:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6127:1:20"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6134:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6202:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6130:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6130:74:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6124:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6124:81:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6101:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6101:105:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6098:131:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6239:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6254:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6257:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6250:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6250:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6239:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5948:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5951:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "5957:7:20",
                "type": ""
              }
            ],
            "src": "5917:348:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6299:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6316:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6319:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6309:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6309:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6309:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6413:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6416:4:20",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6406:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6406:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6406:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6437:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6440:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6430:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6430:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6430:15:20"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "6271:180:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6499:143:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6509:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6532:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6514:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6514:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6509:1:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6543:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6566:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6548:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6543:1:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6590:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "6592:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6592:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6592:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6587:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6580:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6580:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6577:35:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6622:14:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6631:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6634:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6627:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6627:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6622:1:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6488:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6491:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6497:1:20",
                "type": ""
              }
            ],
            "src": "6457:185:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6754:70:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6776:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6784:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6772:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6772:14:20"
                      },
                      {
                        "hexValue": "5468657265206973206e6f2072657761726420746f206d696e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6788:28:20",
                        "type": "",
                        "value": "There is no reward to mint"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6765:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6765:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6765:52:20"
                }
              ]
            },
            "name": "store_literal_in_memory_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6746:6:20",
                "type": ""
              }
            ],
            "src": "6648:176:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6976:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6986:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7052:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7057:2:20",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6993:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6993:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6986:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7158:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c",
                      "nodeType": "YulIdentifier",
                      "src": "7069:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7069:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7069:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7171:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7182:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7187:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7178:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7178:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7171:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6964:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6972:3:20",
                "type": ""
              }
            ],
            "src": "6830:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7373:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7383:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7395:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7406:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7391:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7391:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7383:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7430:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7441:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7426:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7426:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7449:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7455:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7445:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7445:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7419:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7419:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7419:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7475:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7609:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7483:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7483:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7475:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7353:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7368:4:20",
                "type": ""
              }
            ],
            "src": "7202:419:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7781:288:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7791:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7803:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7814:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7799:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7799:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7791:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7871:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7884:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7895:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7880:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7880:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7827:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7827:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7827:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7952:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7965:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7976:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7961:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7961:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7908:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7908:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7908:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8034:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8047:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8058:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8043:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8043:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7990:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7990:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7990:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7737:9:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7749:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7757:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7765:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7776:4:20",
                "type": ""
              }
            ],
            "src": "7627:442:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8119:261:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8129:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8152:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8134:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8134:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8129:1:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8163:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8186:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8168:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8168:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8163:1:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8326:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8328:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8328:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8328:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8247:1:20"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8254:66:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8322:1:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8250:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8250:74:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8244:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8244:81:20"
                  },
                  "nodeType": "YulIf",
                  "src": "8241:107:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8358:16:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8369:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8372:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8365:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8365:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8358:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8106:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8109:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8115:3:20",
                "type": ""
              }
            ],
            "src": "8075:305:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8492:119:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8514:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8522:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8510:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8510:14:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8526:34:20",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8503:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8503:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8503:58:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8582:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8590:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8578:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8578:15:20"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8595:8:20",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8571:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8571:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8571:33:20"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8484:6:20",
                "type": ""
              }
            ],
            "src": "8386:225:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8763:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8773:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8839:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8844:2:20",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8780:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8780:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8773:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8945:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "8856:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8856:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8856:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8958:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8969:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8974:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8965:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8965:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8958:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8751:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8759:3:20",
                "type": ""
              }
            ],
            "src": "8617:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9160:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9170:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9182:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9193:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9178:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9178:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9170:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9217:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9228:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9213:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9213:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9236:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9242:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9232:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9232:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9206:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9206:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9206:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9262:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9396:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9270:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9270:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9262:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9140:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9155:4:20",
                "type": ""
              }
            ],
            "src": "8989:419:20"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender has not locked tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is no reward to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "162:3461:17:-:0;;;407:1;380:28;;992:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1055:15:17;1040:12;;:30;;;;;;;;;;;;;;;;;;992:86;162:3461;;640:96:11;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;162:3461:17:-;;;;;;;",
  "deployedSourceMap": "162:3461:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3074:282;;;:::i;:::-;;2445:469;;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1696:584:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3546:74;;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1250:123:17;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1352:13:17::1;1333:16;:32;;;;1250:123:::0;:::o;3074:282::-;789:1;754:12;:24;767:10;754:24;;;;;;;;;;;;;;;:31;;;:36;;732:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;3128:14:::1;3145:10;3128:27;;3166:26;3195:12;:20;3208:6;3195:20;;;;;;;;;;;;;;;:27;;;3166:56;;3248:12;;;;;;;;;;;3241:29;;;3271:6;3279:18;3241:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3233:66;;;::::0;::::1;;3333:15;;;;;;;;3343:1;3333:15;;;;3346:1;3333:15;;::::0;3310:12:::1;:20;3323:6;3310:20;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;3117:239;;3074:282::o:0;2445:469::-;789:1;754:12;:24;767:10;754:24;;;;;;;;;;;;;;;:31;;;:36;;732:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;2500:14:::1;2517:10;2500:27;;2538:28;2569:12;:20;2582:6;2569:20;;;;;;;;;;;;;;;2538:51;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2600:14;2692:16;;2671:11;:16;;;2653:15;:34;;;;:::i;:::-;2618:11;:18;;;:70;;;;:::i;:::-;2617:91;;;;:::i;:::-;2600:108;;2736:1;2727:6;:10;2719:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2785:12;;;;;;;;;;;2779:31;;;2811:6;2819;2779:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2860:46;;;;;;;;2870:11;:18;;;2860:46;;;;2890:15;2860:46;;::::0;2837:12:::1;:20;2850:6;2837:20;;;;;;;;;;;;;;;:69;;;;;;;;;;;;;;;;;;;2489:425;;;2445:469::o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1696:584:17:-;1747:14;1764:10;1747:27;;1785:28;1816:12;:20;1829:6;1816:20;;;;;;;;;;;;;;;1785:51;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:11;1936:16;;1915:11;:16;;;1897:15;:34;;;;:::i;:::-;1862:11;:18;;;:70;;;;:::i;:::-;1861:91;;;;:::i;:::-;1847:105;;1992:12;;;;;;;;;;;1985:33;;;2019:6;2035:4;2042:6;1985:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1963:97;;;;;;2086:1;2077:6;:10;2073:27;;;2089:11;:9;:11::i;:::-;2073:27;2135:92;;;;;;;;2180:6;2159:11;:18;;;:27;;;;:::i;:::-;2135:92;;;;2201:15;2135:92;;;2121:106;;2261:11;2238:12;:20;2251:6;2238:20;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;1736:544;;;1696:584;:::o;3546:74::-;3580:11;:9;:11::i;:::-;3602:10;:8;:10::i;:::-;3546:74::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:20:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:169::-;2303:11;2337:6;2332:3;2325:19;2377:4;2372:3;2368:14;2353:29;;2219:169;;;;:::o;2394:182::-;2534:34;2530:1;2522:6;2518:14;2511:58;2394:182;:::o;2582:366::-;2724:3;2745:67;2809:2;2804:3;2745:67;:::i;:::-;2738:74;;2821:93;2910:3;2821:93;:::i;:::-;2939:2;2934:3;2930:12;2923:19;;2582:366;;;:::o;2954:419::-;3120:4;3158:2;3147:9;3143:18;3135:26;;3207:9;3201:4;3197:20;3193:1;3182:9;3178:17;3171:47;3235:131;3361:4;3235:131;:::i;:::-;3227:139;;2954:419;;;:::o;3379:178::-;3519:30;3515:1;3507:6;3503:14;3496:54;3379:178;:::o;3563:366::-;3705:3;3726:67;3790:2;3785:3;3726:67;:::i;:::-;3719:74;;3802:93;3891:3;3802:93;:::i;:::-;3920:2;3915:3;3911:12;3904:19;;3563:366;;;:::o;3935:419::-;4101:4;4139:2;4128:9;4124:18;4116:26;;4188:9;4182:4;4178:20;4174:1;4163:9;4159:17;4152:47;4216:131;4342:4;4216:131;:::i;:::-;4208:139;;3935:419;;;:::o;4360:118::-;4447:24;4465:5;4447:24;:::i;:::-;4442:3;4435:37;4360:118;;:::o;4484:332::-;4605:4;4643:2;4632:9;4628:18;4620:26;;4656:71;4724:1;4713:9;4709:17;4700:6;4656:71;:::i;:::-;4737:72;4805:2;4794:9;4790:18;4781:6;4737:72;:::i;:::-;4484:332;;;;;:::o;4822:90::-;4856:7;4899:5;4892:13;4885:21;4874:32;;4822:90;;;:::o;4918:116::-;4988:21;5003:5;4988:21;:::i;:::-;4981:5;4978:32;4968:60;;5024:1;5021;5014:12;4968:60;4918:116;:::o;5040:137::-;5094:5;5125:6;5119:13;5110:22;;5141:30;5165:5;5141:30;:::i;:::-;5040:137;;;;:::o;5183:345::-;5250:6;5299:2;5287:9;5278:7;5274:23;5270:32;5267:119;;;5305:79;;:::i;:::-;5267:119;5425:1;5450:61;5503:7;5494:6;5483:9;5479:22;5450:61;:::i;:::-;5440:71;;5396:125;5183:345;;;;:::o;5534:180::-;5582:77;5579:1;5572:88;5679:4;5676:1;5669:15;5703:4;5700:1;5693:15;5720:191;5760:4;5780:20;5798:1;5780:20;:::i;:::-;5775:25;;5814:20;5832:1;5814:20;:::i;:::-;5809:25;;5853:1;5850;5847:8;5844:34;;;5858:18;;:::i;:::-;5844:34;5903:1;5900;5896:9;5888:17;;5720:191;;;;:::o;5917:348::-;5957:7;5980:20;5998:1;5980:20;:::i;:::-;5975:25;;6014:20;6032:1;6014:20;:::i;:::-;6009:25;;6202:1;6134:66;6130:74;6127:1;6124:81;6119:1;6112:9;6105:17;6101:105;6098:131;;;6209:18;;:::i;:::-;6098:131;6257:1;6254;6250:9;6239:20;;5917:348;;;;:::o;6271:180::-;6319:77;6316:1;6309:88;6416:4;6413:1;6406:15;6440:4;6437:1;6430:15;6457:185;6497:1;6514:20;6532:1;6514:20;:::i;:::-;6509:25;;6548:20;6566:1;6548:20;:::i;:::-;6543:25;;6587:1;6577:35;;6592:18;;:::i;:::-;6577:35;6634:1;6631;6627:9;6622:14;;6457:185;;;;:::o;6648:176::-;6788:28;6784:1;6776:6;6772:14;6765:52;6648:176;:::o;6830:366::-;6972:3;6993:67;7057:2;7052:3;6993:67;:::i;:::-;6986:74;;7069:93;7158:3;7069:93;:::i;:::-;7187:2;7182:3;7178:12;7171:19;;6830:366;;;:::o;7202:419::-;7368:4;7406:2;7395:9;7391:18;7383:26;;7455:9;7449:4;7445:20;7441:1;7430:9;7426:17;7419:47;7483:131;7609:4;7483:131;:::i;:::-;7475:139;;7202:419;;;:::o;7627:442::-;7776:4;7814:2;7803:9;7799:18;7791:26;;7827:71;7895:1;7884:9;7880:17;7871:6;7827:71;:::i;:::-;7908:72;7976:2;7965:9;7961:18;7952:6;7908:72;:::i;:::-;7990;8058:2;8047:9;8043:18;8034:6;7990:72;:::i;:::-;7627:442;;;;;;:::o;8075:305::-;8115:3;8134:20;8152:1;8134:20;:::i;:::-;8129:25;;8168:20;8186:1;8168:20;:::i;:::-;8163:25;;8322:1;8254:66;8250:74;8247:1;8244:81;8241:107;;;8328:18;;:::i;:::-;8241:107;8372:1;8369;8365:9;8358:16;;8075:305;;;;:::o;8386:225::-;8526:34;8522:1;8514:6;8510:14;8503:58;8595:8;8590:2;8582:6;8578:15;8571:33;8386:225;:::o;8617:366::-;8759:3;8780:67;8844:2;8839:3;8780:67;:::i;:::-;8773:74;;8856:93;8945:3;8856:93;:::i;:::-;8974:2;8969:3;8965:12;8958:19;;8617:366;;;:::o;8989:419::-;9155:4;9193:2;9182:9;9178:18;9170:26;;9242:9;9236:4;9232:20;9228:1;9217:9;9213:17;9206:47;9270:131;9396:4;9270:131;:::i;:::-;9262:139;;8989:419;;;:::o",
  "source": "pragma solidity 0.8.10;\r\nimport '@openzeppelin/contracts/access/Ownable.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport './Linux.sol';\r\n\r\ncontract LinuxStaking is Ownable {\r\n    //Stores the ERC20 contract's address to used to pay\r\n    address tokenAddress;\r\n\r\n    //Stores the amount of seconds in which one token will be given for each staked token\r\n    uint256 stakingSecAmount = 1;\r\n\r\n    //Stores the stake amount and deposit date\r\n    struct StakeData {\r\n        uint256 amount;\r\n        uint256 date;\r\n    }\r\n\r\n    //Stores the stake data for address\r\n    mapping(address => StakeData) lockedTokens;\r\n\r\n    event AddressLockedTokens(uint256 lockedTokens);\r\n\r\n    modifier hasLockedTokens() {\r\n        require(\r\n            lockedTokens[msg.sender].amount != 0,\r\n            'Sender has not locked tokens'\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**@dev Constructs staking contraft and defines the\r\n     *      token contract's address used to stake\r\n     */\r\n    constructor(address newTokenAddress) {\r\n        tokenAddress = newTokenAddress;\r\n    }\r\n\r\n    /**@dev Sets a given staking reward seconds amount\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - Only contract's owner can call this function\r\n     */\r\n    function setStakingSecondAmount(uint256 secondsAmount) public onlyOwner {\r\n        stakingSecAmount = secondsAmount;\r\n    }\r\n\r\n    /**@dev Adds a given amount of tokens to the sender address\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - The address of this contract needs to be allowed\r\n     *   to transfer from sender the given amount\r\n     * - Given amount has to be transferred to the address\r\n     *   of this contract\r\n     */\r\n    function deposit(uint256 amount) public {\r\n        address sender = msg.sender;\r\n        StakeData memory senderStake = lockedTokens[sender];\r\n        uint reward = (senderStake.amount *\r\n            (block.timestamp - senderStake.date)) / stakingSecAmount;\r\n        require(\r\n            IERC20(tokenAddress).transferFrom(sender, address(this), amount)\r\n        );\r\n\r\n        if (reward > 0) getReward();\r\n        \r\n        senderStake = StakeData(\r\n            senderStake.amount + amount,\r\n            block.timestamp\r\n        );\r\n        lockedTokens[sender] = senderStake;\r\n    }\r\n\r\n    /**@dev Mints the reward amount of tokens to the sender\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - Sender has to have locked tokens\r\n     */\r\n    function getReward() public hasLockedTokens {\r\n        address sender = msg.sender;\r\n        StakeData memory senderStake = lockedTokens[sender];\r\n        uint256 reward = (senderStake.amount *\r\n            (block.timestamp - senderStake.date)) / stakingSecAmount;\r\n        require(reward > 0, 'There is no reward to mint');\r\n        Linux(tokenAddress).allowedMint(sender, reward);\r\n        lockedTokens[sender] = StakeData(senderStake.amount, block.timestamp);\r\n    }\r\n\r\n    /**@dev Retrieves back the locked tokens of sender\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - Sender has to have locked tokens\r\n     */\r\n    function retrieve() public hasLockedTokens {\r\n        address sender = msg.sender;\r\n        uint256 senderStakedTokens = lockedTokens[sender].amount;\r\n        require(IERC20(tokenAddress).transfer(sender, senderStakedTokens));\r\n        lockedTokens[sender] = StakeData(0, 0);\r\n    }\r\n\r\n    /**@dev Retrieves back the locked tokens\r\n     *      of sender and gets rewards\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - Sender has to have locked tokens\r\n     */\r\n    function exit() public {\r\n        getReward();\r\n        retrieve();\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\PC\\Documents\\VSCode\\Solidity\\contracts\\LinuxStaking.sol",
  "ast": {
    "absolutePath": "project:/contracts/LinuxStaking.sol",
    "exportedSymbols": {
      "Address": [
        2484
      ],
      "Context": [
        2506
      ],
      "ERC165": [
        2733
      ],
      "ERC20": [
        690
      ],
      "ERC721": [
        1659
      ],
      "ERC721Enumerable": [
        2131
      ],
      "IERC165": [
        2745
      ],
      "IERC20": [
        768
      ],
      "IERC20Metadata": [
        793
      ],
      "IERC721": [
        1775
      ],
      "IERC721Enumerable": [
        2162
      ],
      "IERC721Metadata": [
        2189
      ],
      "IERC721Receiver": [
        1793
      ],
      "Linux": [
        3028
      ],
      "LinuxStaking": [
        3275
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        2709
      ],
      "Windows": [
        3460
      ]
    },
    "id": 3276,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3030,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3031,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3276,
        "sourceUnit": 105,
        "src": "25:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3032,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3276,
        "sourceUnit": 769,
        "src": "79:56:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Linux.sol",
        "file": "./Linux.sol",
        "id": 3033,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3276,
        "sourceUnit": 3029,
        "src": "137:21:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3034,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "187:7:17"
            },
            "id": 3035,
            "nodeType": "InheritanceSpecifier",
            "src": "187:7:17"
          }
        ],
        "canonicalName": "LinuxStaking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3275,
        "linearizedBaseContracts": [
          3275,
          104,
          2506
        ],
        "name": "LinuxStaking",
        "nameLocation": "171:12:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3037,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "268:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3275,
            "src": "260:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3036,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "260:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3040,
            "mutability": "mutable",
            "name": "stakingSecAmount",
            "nameLocation": "388:16:17",
            "nodeType": "VariableDeclaration",
            "scope": 3275,
            "src": "380:28:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3038,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 3039,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "407:1:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "LinuxStaking.StakeData",
            "id": 3045,
            "members": [
              {
                "constant": false,
                "id": 3042,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "501:6:17",
                "nodeType": "VariableDeclaration",
                "scope": 3045,
                "src": "493:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3041,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "493:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3044,
                "mutability": "mutable",
                "name": "date",
                "nameLocation": "526:4:17",
                "nodeType": "VariableDeclaration",
                "scope": 3045,
                "src": "518:12:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3043,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "518:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakeData",
            "nameLocation": "472:9:17",
            "nodeType": "StructDefinition",
            "scope": 3275,
            "src": "465:73:17",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3050,
            "mutability": "mutable",
            "name": "lockedTokens",
            "nameLocation": "617:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3275,
            "src": "587:42:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
              "typeString": "mapping(address => struct LinuxStaking.StakeData)"
            },
            "typeName": {
              "id": 3049,
              "keyType": {
                "id": 3046,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "595:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "587:29:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
                "typeString": "mapping(address => struct LinuxStaking.StakeData)"
              },
              "valueType": {
                "id": 3048,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3047,
                  "name": "StakeData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3045,
                  "src": "606:9:17"
                },
                "referencedDeclaration": 3045,
                "src": "606:9:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakeData_$3045_storage_ptr",
                  "typeString": "struct LinuxStaking.StakeData"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 3054,
            "name": "AddressLockedTokens",
            "nameLocation": "644:19:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3052,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockedTokens",
                  "nameLocation": "672:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "664:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "663:22:17"
            },
            "src": "638:48:17"
          },
          {
            "body": {
              "id": 3068,
              "nodeType": "Block",
              "src": "721:145:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3057,
                              "name": "lockedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3050,
                              "src": "754:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
                                "typeString": "mapping(address => struct LinuxStaking.StakeData storage ref)"
                              }
                            },
                            "id": 3060,
                            "indexExpression": {
                              "expression": {
                                "id": 3058,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "767:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "767:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "754:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                              "typeString": "struct LinuxStaking.StakeData storage ref"
                            }
                          },
                          "id": 3061,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3042,
                          "src": "754:31:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "789:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "754:36:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e64657220686173206e6f74206c6f636b656420746f6b656e73",
                        "id": 3064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46",
                          "typeString": "literal_string \"Sender has not locked tokens\""
                        },
                        "value": "Sender has not locked tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bec9df31c3b5b8e9a7f513e56e89b197c9b6f76c51755ab3b765dcc65b5d2a46",
                          "typeString": "literal_string \"Sender has not locked tokens\""
                        }
                      ],
                      "id": 3056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "732:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:114:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3066,
                  "nodeType": "ExpressionStatement",
                  "src": "732:114:17"
                },
                {
                  "id": 3067,
                  "nodeType": "PlaceholderStatement",
                  "src": "857:1:17"
                }
              ]
            },
            "id": 3069,
            "name": "hasLockedTokens",
            "nameLocation": "703:15:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:2:17"
            },
            "src": "694:172:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3079,
              "nodeType": "Block",
              "src": "1029:49:17",
              "statements": [
                {
                  "expression": {
                    "id": 3077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3075,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3037,
                      "src": "1040:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3076,
                      "name": "newTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3072,
                      "src": "1055:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1040:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3078,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:30:17"
                }
              ]
            },
            "documentation": {
              "id": 3070,
              "nodeType": "StructuredDocumentation",
              "src": "874:112:17",
              "text": "@dev Constructs staking contraft and defines the\n      token contract's address used to stake"
            },
            "id": 3080,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3072,
                  "mutability": "mutable",
                  "name": "newTokenAddress",
                  "nameLocation": "1012:15:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3080,
                  "src": "1004:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1003:25:17"
            },
            "returnParameters": {
              "id": 3074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:0:17"
            },
            "scope": 3275,
            "src": "992:86:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3092,
              "nodeType": "Block",
              "src": "1322:51:17",
              "statements": [
                {
                  "expression": {
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3088,
                      "name": "stakingSecAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3040,
                      "src": "1333:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3089,
                      "name": "secondsAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3083,
                      "src": "1352:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1333:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:32:17"
                }
              ]
            },
            "documentation": {
              "id": 3081,
              "nodeType": "StructuredDocumentation",
              "src": "1086:158:17",
              "text": "@dev Sets a given staking reward seconds amount\n Calling conditions:\n - Only contract's owner can call this function"
            },
            "functionSelector": "012a4b36",
            "id": 3093,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3086,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3085,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1312:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1312:9:17"
              }
            ],
            "name": "setStakingSecondAmount",
            "nameLocation": "1259:22:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3083,
                  "mutability": "mutable",
                  "name": "secondsAmount",
                  "nameLocation": "1290:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3093,
                  "src": "1282:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1281:23:17"
            },
            "returnParameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:17"
            },
            "scope": 3275,
            "src": "1250:123:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "1736:544:17",
              "statements": [
                {
                  "assignments": [
                    3100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3100,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1755:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "1747:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3099,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1747:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3103,
                  "initialValue": {
                    "expression": {
                      "id": 3101,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1764:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1764:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1747:27:17"
                },
                {
                  "assignments": [
                    3106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3106,
                      "mutability": "mutable",
                      "name": "senderStake",
                      "nameLocation": "1802:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "1785:28:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                        "typeString": "struct LinuxStaking.StakeData"
                      },
                      "typeName": {
                        "id": 3105,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3104,
                          "name": "StakeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3045,
                          "src": "1785:9:17"
                        },
                        "referencedDeclaration": 3045,
                        "src": "1785:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakeData_$3045_storage_ptr",
                          "typeString": "struct LinuxStaking.StakeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3110,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3107,
                      "name": "lockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3050,
                      "src": "1816:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
                        "typeString": "mapping(address => struct LinuxStaking.StakeData storage ref)"
                      }
                    },
                    "id": 3109,
                    "indexExpression": {
                      "id": 3108,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3100,
                      "src": "1829:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1816:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                      "typeString": "struct LinuxStaking.StakeData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1785:51:17"
                },
                {
                  "assignments": [
                    3112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3112,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "1852:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "1847:11:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3111,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1847:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3125,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3113,
                              "name": "senderStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3106,
                              "src": "1862:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                                "typeString": "struct LinuxStaking.StakeData memory"
                              }
                            },
                            "id": 3114,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3042,
                            "src": "1862:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3115,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "1897:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1897:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3117,
                                    "name": "senderStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3106,
                                    "src": "1915:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                                      "typeString": "struct LinuxStaking.StakeData memory"
                                    }
                                  },
                                  "id": 3118,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "date",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3044,
                                  "src": "1915:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1897:34:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3120,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1896:36:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1862:70:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3122,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1861:72:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 3123,
                      "name": "stakingSecAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3040,
                      "src": "1936:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1861:91:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1847:105:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3131,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3100,
                            "src": "2019:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3134,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2035:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LinuxStaking_$3275",
                                  "typeString": "contract LinuxStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LinuxStaking_$3275",
                                  "typeString": "contract LinuxStaking"
                                }
                              ],
                              "id": 3133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2027:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3132,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2027:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2027:13:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3136,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3096,
                            "src": "2042:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3128,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3037,
                                "src": "1992:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3127,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 768,
                              "src": "1985:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 3129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1985:20:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$768",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 767,
                          "src": "1985:33:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1985:64:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1963:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:97:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3139,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:97:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3140,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3112,
                      "src": "2077:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2086:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2077:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3146,
                  "nodeType": "IfStatement",
                  "src": "2073:27:17",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3143,
                        "name": "getReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3225,
                        "src": "2089:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 3144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2089:11:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3145,
                    "nodeType": "ExpressionStatement",
                    "src": "2089:11:17"
                  }
                },
                {
                  "expression": {
                    "id": 3156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3147,
                      "name": "senderStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3106,
                      "src": "2121:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                        "typeString": "struct LinuxStaking.StakeData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3149,
                              "name": "senderStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3106,
                              "src": "2159:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                                "typeString": "struct LinuxStaking.StakeData memory"
                              }
                            },
                            "id": 3150,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3042,
                            "src": "2159:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3151,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3096,
                            "src": "2180:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2159:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 3153,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2201:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2201:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3148,
                        "name": "StakeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3045,
                        "src": "2135:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakeData_$3045_storage_ptr_$",
                          "typeString": "type(struct LinuxStaking.StakeData storage pointer)"
                        }
                      },
                      "id": 3155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2135:92:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                        "typeString": "struct LinuxStaking.StakeData memory"
                      }
                    },
                    "src": "2121:106:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                      "typeString": "struct LinuxStaking.StakeData memory"
                    }
                  },
                  "id": 3157,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:106:17"
                },
                {
                  "expression": {
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3158,
                        "name": "lockedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "2238:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
                          "typeString": "mapping(address => struct LinuxStaking.StakeData storage ref)"
                        }
                      },
                      "id": 3160,
                      "indexExpression": {
                        "id": 3159,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3100,
                        "src": "2251:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2238:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                        "typeString": "struct LinuxStaking.StakeData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3161,
                      "name": "senderStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3106,
                      "src": "2261:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                        "typeString": "struct LinuxStaking.StakeData memory"
                      }
                    },
                    "src": "2238:34:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                      "typeString": "struct LinuxStaking.StakeData storage ref"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "2238:34:17"
                }
              ]
            },
            "documentation": {
              "id": 3094,
              "nodeType": "StructuredDocumentation",
              "src": "1381:309:17",
              "text": "@dev Adds a given amount of tokens to the sender address\n Calling conditions:\n - The address of this contract needs to be allowed\n   to transfer from sender the given amount\n - Given amount has to be transferred to the address\n   of this contract"
            },
            "functionSelector": "b6b55f25",
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1705:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1721:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "1713:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1713:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1712:16:17"
            },
            "returnParameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:17"
            },
            "scope": 3275,
            "src": "1696:584:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3224,
              "nodeType": "Block",
              "src": "2489:425:17",
              "statements": [
                {
                  "assignments": [
                    3172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3172,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "2508:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3224,
                      "src": "2500:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2500:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3175,
                  "initialValue": {
                    "expression": {
                      "id": 3173,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2517:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2517:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2500:27:17"
                },
                {
                  "assignments": [
                    3178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3178,
                      "mutability": "mutable",
                      "name": "senderStake",
                      "nameLocation": "2555:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3224,
                      "src": "2538:28:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                        "typeString": "struct LinuxStaking.StakeData"
                      },
                      "typeName": {
                        "id": 3177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3176,
                          "name": "StakeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3045,
                          "src": "2538:9:17"
                        },
                        "referencedDeclaration": 3045,
                        "src": "2538:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakeData_$3045_storage_ptr",
                          "typeString": "struct LinuxStaking.StakeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3182,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3179,
                      "name": "lockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3050,
                      "src": "2569:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
                        "typeString": "mapping(address => struct LinuxStaking.StakeData storage ref)"
                      }
                    },
                    "id": 3181,
                    "indexExpression": {
                      "id": 3180,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3172,
                      "src": "2582:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2569:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                      "typeString": "struct LinuxStaking.StakeData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2538:51:17"
                },
                {
                  "assignments": [
                    3184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3184,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "2608:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3224,
                      "src": "2600:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2600:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3197,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3185,
                              "name": "senderStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3178,
                              "src": "2618:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                                "typeString": "struct LinuxStaking.StakeData memory"
                              }
                            },
                            "id": 3186,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3042,
                            "src": "2618:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3187,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "2653:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2653:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3189,
                                    "name": "senderStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3178,
                                    "src": "2671:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                                      "typeString": "struct LinuxStaking.StakeData memory"
                                    }
                                  },
                                  "id": 3190,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "date",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3044,
                                  "src": "2671:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2653:34:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3192,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2652:36:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2618:70:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3194,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2617:72:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 3195,
                      "name": "stakingSecAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3040,
                      "src": "2692:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2617:91:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2600:108:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3199,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3184,
                          "src": "2727:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2736:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2727:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f2072657761726420746f206d696e74",
                        "id": 3202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2739:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c",
                          "typeString": "literal_string \"There is no reward to mint\""
                        },
                        "value": "There is no reward to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7f9a8a85763e69a03ae1040b5acc4bb989d801dd6dddd18e3b492a6cabec57c",
                          "typeString": "literal_string \"There is no reward to mint\""
                        }
                      ],
                      "id": 3198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2719:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2719:49:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3204,
                  "nodeType": "ExpressionStatement",
                  "src": "2719:49:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3209,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3172,
                        "src": "2811:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3210,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3184,
                        "src": "2819:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3206,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3037,
                            "src": "2785:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3205,
                          "name": "Linux",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3028,
                          "src": "2779:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Linux_$3028_$",
                            "typeString": "type(contract Linux)"
                          }
                        },
                        "id": 3207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2779:19:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Linux_$3028",
                          "typeString": "contract Linux"
                        }
                      },
                      "id": 3208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowedMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2972,
                      "src": "2779:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2779:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3212,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:47:17"
                },
                {
                  "expression": {
                    "id": 3222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3213,
                        "name": "lockedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "2837:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
                          "typeString": "mapping(address => struct LinuxStaking.StakeData storage ref)"
                        }
                      },
                      "id": 3215,
                      "indexExpression": {
                        "id": 3214,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3172,
                        "src": "2850:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2837:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                        "typeString": "struct LinuxStaking.StakeData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3217,
                            "name": "senderStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3178,
                            "src": "2870:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                              "typeString": "struct LinuxStaking.StakeData memory"
                            }
                          },
                          "id": 3218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3042,
                          "src": "2870:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 3219,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2890:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2890:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3216,
                        "name": "StakeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3045,
                        "src": "2860:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakeData_$3045_storage_ptr_$",
                          "typeString": "type(struct LinuxStaking.StakeData storage pointer)"
                        }
                      },
                      "id": 3221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2860:46:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                        "typeString": "struct LinuxStaking.StakeData memory"
                      }
                    },
                    "src": "2837:69:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                      "typeString": "struct LinuxStaking.StakeData storage ref"
                    }
                  },
                  "id": 3223,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:69:17"
                }
              ]
            },
            "documentation": {
              "id": 3166,
              "nodeType": "StructuredDocumentation",
              "src": "2288:151:17",
              "text": "@dev Mints the reward amount of tokens to the sender\n Calling conditions:\n - Sender has to have locked tokens"
            },
            "functionSelector": "3d18b912",
            "id": 3225,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3168,
                  "name": "hasLockedTokens",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3069,
                  "src": "2473:15:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2473:15:17"
              }
            ],
            "name": "getReward",
            "nameLocation": "2454:9:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2463:2:17"
            },
            "returnParameters": {
              "id": 3170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2489:0:17"
            },
            "scope": 3275,
            "src": "2445:469:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3262,
              "nodeType": "Block",
              "src": "3117:239:17",
              "statements": [
                {
                  "assignments": [
                    3232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3232,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "3136:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3262,
                      "src": "3128:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3231,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3128:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3235,
                  "initialValue": {
                    "expression": {
                      "id": 3233,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3145:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3145:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3128:27:17"
                },
                {
                  "assignments": [
                    3237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3237,
                      "mutability": "mutable",
                      "name": "senderStakedTokens",
                      "nameLocation": "3174:18:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3262,
                      "src": "3166:26:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3236,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3166:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3242,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 3238,
                        "name": "lockedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "3195:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
                          "typeString": "mapping(address => struct LinuxStaking.StakeData storage ref)"
                        }
                      },
                      "id": 3240,
                      "indexExpression": {
                        "id": 3239,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "3208:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3195:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                        "typeString": "struct LinuxStaking.StakeData storage ref"
                      }
                    },
                    "id": 3241,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3042,
                    "src": "3195:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3166:56:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3248,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3232,
                            "src": "3271:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3249,
                            "name": "senderStakedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "3279:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3245,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3037,
                                "src": "3248:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3244,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 768,
                              "src": "3241:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3241:20:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$768",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 735,
                          "src": "3241:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3241:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3233:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:66:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3252,
                  "nodeType": "ExpressionStatement",
                  "src": "3233:66:17"
                },
                {
                  "expression": {
                    "id": 3260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3253,
                        "name": "lockedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "3310:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeData_$3045_storage_$",
                          "typeString": "mapping(address => struct LinuxStaking.StakeData storage ref)"
                        }
                      },
                      "id": 3255,
                      "indexExpression": {
                        "id": 3254,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "3323:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3310:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                        "typeString": "struct LinuxStaking.StakeData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3343:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 3258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3346:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3256,
                        "name": "StakeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3045,
                        "src": "3333:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakeData_$3045_storage_ptr_$",
                          "typeString": "type(struct LinuxStaking.StakeData storage pointer)"
                        }
                      },
                      "id": 3259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3333:15:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeData_$3045_memory_ptr",
                        "typeString": "struct LinuxStaking.StakeData memory"
                      }
                    },
                    "src": "3310:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeData_$3045_storage",
                      "typeString": "struct LinuxStaking.StakeData storage ref"
                    }
                  },
                  "id": 3261,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:38:17"
                }
              ]
            },
            "documentation": {
              "id": 3226,
              "nodeType": "StructuredDocumentation",
              "src": "2922:146:17",
              "text": "@dev Retrieves back the locked tokens of sender\n Calling conditions:\n - Sender has to have locked tokens"
            },
            "functionSelector": "2e64cec1",
            "id": 3263,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3228,
                  "name": "hasLockedTokens",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3069,
                  "src": "3101:15:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3101:15:17"
              }
            ],
            "name": "retrieve",
            "nameLocation": "3083:8:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3091:2:17"
            },
            "returnParameters": {
              "id": 3230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3117:0:17"
            },
            "scope": 3275,
            "src": "3074:282:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3273,
              "nodeType": "Block",
              "src": "3569:51:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3267,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3225,
                      "src": "3580:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3580:11:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3269,
                  "nodeType": "ExpressionStatement",
                  "src": "3580:11:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3270,
                      "name": "retrieve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3263,
                      "src": "3602:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3602:10:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3272,
                  "nodeType": "ExpressionStatement",
                  "src": "3602:10:17"
                }
              ]
            },
            "documentation": {
              "id": 3264,
              "nodeType": "StructuredDocumentation",
              "src": "3364:176:17",
              "text": "@dev Retrieves back the locked tokens\n      of sender and gets rewards\n Calling conditions:\n - Sender has to have locked tokens"
            },
            "functionSelector": "e9fad8ee",
            "id": 3274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit",
            "nameLocation": "3555:4:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3559:2:17"
            },
            "returnParameters": {
              "id": 3266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3569:0:17"
            },
            "scope": 3275,
            "src": "3546:74:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3276,
        "src": "162:3461:17",
        "usedErrors": []
      }
    ],
    "src": "0:3625:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-12T19:08:28.067Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructs staking contraft and defines the      token contract's address used to stake"
      },
      "deposit(uint256)": {
        "details": "Adds a given amount of tokens to the sender address Calling conditions: - The address of this contract needs to be allowed   to transfer from sender the given amount - Given amount has to be transferred to the address   of this contract"
      },
      "exit()": {
        "details": "Retrieves back the locked tokens      of sender and gets rewards Calling conditions: - Sender has to have locked tokens"
      },
      "getReward()": {
        "details": "Mints the reward amount of tokens to the sender Calling conditions: - Sender has to have locked tokens"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "retrieve()": {
        "details": "Retrieves back the locked tokens of sender Calling conditions: - Sender has to have locked tokens"
      },
      "setStakingSecondAmount(uint256)": {
        "details": "Sets a given staking reward seconds amount Calling conditions: - Only contract's owner can call this function"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}